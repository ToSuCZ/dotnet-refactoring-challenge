name: .NET CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ '9.0.x' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test (+ TRX + Cobertura coverage)
        run: |
          dotnet test --configuration Release --no-build \
            --logger "trx;LogFileName=test_results.trx" \
            --collect:"XPlat Code Coverage"

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/TestResults/*.trx'

      - name: Coverage summary (Markdown in checks)
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: '**/TestResults/*/coverage.cobertura.xml'
          badge: true
          fail_below_min: false
          format: markdown
          output: both
          thresholds: '0 80'

      - name: Generate HTML coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: '**/TestResults/*/coverage.cobertura.xml'
          targetdir: 'coverage-report'
          reporttypes: 'HtmlInline;Cobertura'

      - name: Upload test results & coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/TestResults/*.trx
            coverage-report/**